{
  "visual": 
  {
    "title": "Visual",
    "subtitle": "Accessibility",
    "letter": "V",
    "intro": 
    {
      "p": "Speaking of web-accessibility, the visually impaired have the most painpoints. <a href=\"http://www.euroblind.org/resources/information/\">According to the EBU</a> more than 4% of the european population is blind or partially sighted. They use screen reader. A screen reader is a tool that reads content aloud. There are different types of screen readers, the most popular Screen Readers are JAWS and Zoom Text:",
      "img":
      {
        "src": "assets/img/sr-stats.png",
        "alt": "Chart of primary screen reader usage showing decreases in JAWS, NVDA, VoiceOver, SA and significant increases in ZoomText and Window-Eyes.",
        "caption": "Chart based on Data from <a href=\"http://webaim.org/projects/screenreadersurvey6/#primary\">webaim.org</a> a textual description can be found there."
      },
      "ul":
      [
        "All concepts introduced on this page were tested with VoiceOver and JAWS in June 2016.",
        "In all outputs under the examples, the headings where replaced by strong tags in order to not confuse screen reader users browsing this page."
      ]
    },
    "sections": 
    [
      {
        "title": "Basic Facts",
        "paragraphs":
        [
          {
            "li": "Screen reader can read text, and interpret special attributes written in HTML, most modern screen reader can also list common items as all headers, links, forms and tables."
          },
          {
            "li": "The usual painpoints are a bad page strukture, images, svg, graphs, videos, forms, tables, repetitive elements, visual features, popups."
          },
          {
            "li": "Screen readers have <a href=\"http://webaim.org/projects/screenreadersurvey4/#javascript\">no problems using javascript</a>."
          }
        ]
      },
      {
        "title": "Hiding Elements",
        "paragraphs": 
        [
          {
            "li": "Almost all screen reader obey <code class='language-css'>display:none</code> and <code class='language-css'>visibility:hidden</code> by ignoring the element."
          },
          {
            "li": "To have elements visually hidden but still accessible for screen readers the <a href=\"https://www.w3.org/WAI/tutorials/forms/labels/#note-on-hiding-elements\">W3C suggests</a> this css method:",
            "pre": ".visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}",
            "preLang": "css"
          },
          {
            "li": "Of course you can also do the contrary. Hide text for screen readers but show it visually by using <code class='language-markup'>aria-hidden=\"true\"</code>. The support for aria-hidden is <a href=\"http://www.html5accessibility.com/tests/hidden2013.html\">brilliant</a>."
          },
          {
            "li": "This is how a screenreader would typically interpret the different hiding methods:",
            "example":
            {
              "pre": "I love\n <span style=\"display:none;\">bees</span>\n <span class=\"visuallyhidden\">cats</span>\n <span hidden>and</span>\n <span aria-hidden=\"true\">you</span>",
              "preLang": "markup",
              "play": "Listen ♫",
              "audio": "I love cats"
            }
          }
        ]
      },
      {
        "title": "Structure",
        "paragraphs": 
        [
          {
            "li": "The typical behaviour of screen reader is to read the page from top to bottom. So it is critical that all your element positioning follows the HTML flow. As all modern screen reader use and understand CSS and JavaScript it is important not to mess with that logical flow."
          },
          {
            "li": "The document outline should be respected. Read more on this in the <a href=\"#headings\">Headings section</a>. A tool to check your document outline is the <a href=\"https://gsnedders.html5.org/outliner/\">html5 outliner</a>."
          },
          {
            "li": "Use the <code>header</code> tag with <code>role=\"banner\"</code> for the heading of your website (often containing the logo and a searchbar). I.e. like this:",
            "example":
            {
              "pre": "<header role=\"banner\">\n  <img alt=\"Google\" style=\"height:70px\">\n  <div role=\"search\">\n    <input type=\"search\" aria-label=\"Search\">\n    <button type=\"submit\">Search</button>\n  </div>\n</header>",
              "preLang": "markup",
              "play": "Listen ♫",
              "audio": "Banner, 2 items. -- Google image. -- Search, 2 items. -- search input. -- search button."
            }
          },
          {
            "li": "Any navigation should be contained in a <code>nav</code> tag with <code>role=\"navigation\"</code>. This way some screen reader will be able to list all the navigation elements on your page. Learn more on navigations in the <a href=\"#Navigation\">Navigation section</a>."
          },
          {
            "li": "The main content should be in a <code>main</code> tag with <code>role=\"main\"</code>. A page should always have main section. Some screen reader allow users to jump directly into the main section of a page and thus skipping the navigation or headings."
          },
          {
            "li": "The global footer should be in a <code>footer</code> tag with the <code>role=\"contentinfo\"</code> to differentiate it from other footers on the page."
          },
          {
            "li": "Any supplementary element (that do not fit in the main tag) belong in an <code>aside</code> tag with <code>role=\"complementary\"</code>."
          },
          {
            "li": "The searchbar (with its input, label, button, etc.) should be in a container (can be a form element) with <code>role=\"search\"</code>. Some screen reader allow users to jump directly to the search bar."
          },
          {
            "li": "To group content of a page you can divide it in sections with the <code>section</code> tag and the generic <code>role=\"region\"</code>. However, don’t overuse it as it adds text for the screen reader to read. On this page the different sections were groupes using this method, but not their subsections. Like this:",
            "example":
            {
              "pre": "<section role=\"region\" aria-labelledby=\"SomeTitle\">\n  <h2 id=\"SomeTitle\">\n    Structure\n  </h2>\n\n  [...]\n\n  <div>\n    <h3 id=\"SomeSubtitle\">\n      Subtitle of Structure\n    </h3>\n\n    [...]\n\n  </div>\n</section>",
              "preLang": "markup",
              "play": "Listen ♫",
              "audio": "Region 'Structure', 4 items. -- Heading Level 2, Structure. -- content. -- Heading Level 3, Subtitle of Structure. -- content."
            }
          },
          {
            "li": "When structuring your element, the best practice is to use the <code>aria-labelledby</code> attribute and give it the <code>id</code> of the elements heading since all modern screen readers can list headings but not sections. If there is no descriptive heading, at least the <code>aria-label</code> attribute should be used. Let’s demonstrate the different behaviours:",
            "example":
            {
              "pre": "<section role=\"region\" aria-label=\"about\">\n  <h2 id=\"about\">About Sharks</h2>\n  [...]\n</section>\nOR\n<section role=\"region\" aria-label=\"Shark Fakts\">\n  [...]\n</section>\nOR\n<section role=\"region\">\n  [...]\n</section>",
              "preLang": "markup",
              "play": "Listen ♫",
              "audio": "Region 'About Sharks' 2 items. -- Heading Level 2, About Sharks. -- content. | OR. -- Region 'Shark Fakts' 1 item. -- content. | OR. -- Region 1 item. -- content."
            }
          },
          {
            "li": "Use the right tags for the job:",
            "table":
            {
              "caption": "which tag is for what?",
              "heads": 
              [
                "tag",
                "job",
                "learn more"
              ],
              "rows":
              [
                [
                  "ol",
                  "ordered list",
                  "<a href=\"https://developer.mozilla.org/en/docs/Web/HTML/Element/ol\">MDN</a>"
                ],
                [
                  "ul",
                  "unordered list",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul\">MDN</a>"
                ],
                [
                  "dl",
                  "definition list",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl\">MDN</a>"
                ],
                [
                  "table",
                  "tabular data",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\">MDN</a>"
                ],
                [
                  "blockquote",
                  "quotes",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl\">MDN</a>"
                ],
                [
                  "q",
                  "inline quotes",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q\">MDN</a>"
                ],
                [
                  "img",
                  "images",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img\">MDN</a>"
                ],
                [
                  "em",
                  "emphasis (italic text)",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em\">MDN</a>"
                ],
                [
                  "strong",
                  "bold/highlighted text",
                  "<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong\">MDN</a>"
                ],
                [
                  {
                    "manyMoreTitle": "Few more",
                    "manyMoreSpan": "3",
                    "manyMore":
                    [
                      "abbr",
                      "address",
                      "audio",
                      "base",
                      "button",
                      "colgroup",
                      "datalist",
                      "del",
                      "details",
                      "figure",
                      "i",
                      "kbd",
                      "map",
                      "mark",
                      "meter",
                      "noscript",
                      "output",
                      "progress",
                      "s",
                      "sub",
                      "sup",
                      "track",
                      "video"
                    ]
                  }
                ]
              ]
            }
          }
        ]
      },
      {
        "title": "Headings",
        "paragraphs":
        [
          {
            "li": "Beside giving a visual clue, screen reader can list all headings. A screen reader user will typically scan a pages headings and then jump imediately to that section. Therefor the logical flow of headings is more than important. Nest headings accordingly: h1 > h2 > h3 > ... without skipping a level."
          },
          {
            "li": "therefore it is also important to give all your page sections a specific heading with <code>aria-labelledby</code> <a href=\"#Structure-10\">as seen before under Structure</a>."
          },
          {
            "li": "Wen browsing over a heading, its level is read aloud:",
            "example":
            {
              "pre": "<h6>Example Heading</h6>",
              "preLang": "markup",
              "play": "Listen ♫",
              "audio": "Heading Level 6, Example Heading."
            }
          },
          {
            "li": "The <code>role=\"heading\"</code> is not necessary if you use h tags. It might be used to declare another element than an h tag as a heading with <code>role=\"heading\" aria-level=\"7\"</code>. I.e. to get deeper than h6"
          }
        ],
        "subs":
        [
          {
            "title": "Good headings",
            "paragraphs":
            [
              {
                "li": "Write the key information at the beginning.",
                "pre": "<!-- DO: -->\n<li>Great White Shark Facts</li>\n<li>Hammerhead Shark Facts</li>\n<!-- DONT: -->\n<li>Facts about great white sharks</li>\n<li>Facts about Hammerhead sharks</li>",
                "preLang": "markup"
              },
              {
                "li": "Usually the first heading is the page name or the overall heading, the second headings indicate the different sections"
              },
              {
                "li": "Also have a look at the guidelines regarding <a href=\"headings\">headings for people with cognitive disabilities</a>."
              }
            ]
          }
        ]
      },
      {
        "title": "Menus",
        "paragraphs":
        [
          {
            "li": "Use list of links to help screen readers announce the number of links a menu has. Generally use unordered lists <code>ul</code> but when the order matters as in table of contents use ordered lists <code>ol</code>."
          },
          {
            "li": "Indicate the current page by adding 'Current Page:' in front of the respective element in the menu. Additionally, to make sure that the current page is obvious, the current page should not be linked. See the <a href=\"#Menus-3\">example below</a>."
          },
          {
            "li": "Wrap the menu in a <code>nav</code> tag with <code>role=\"navigation\"</code> and a heading to label the menu. That heading can be visually hidden. This is an accessible menu that enables users to find it when listing all the headings or menus:",
            "example":
            {
              "pre": "<nav role=\"navigation\" aria-label=\"mainmenu\">\n  <h2 id=\"mainmenu\" class=\"visuallyhidden\">Main Menu</h2>\n  <ul>\n    <li><span class=\"visuallyhidden\">Current: </span>Home</li>\n    <li><a href=\"#link\">About</a></li>\n    <li><a href=\"#link\">Contact</a></li>\n  </ul>\n</nav>",
              "preLang": "markup",
              "play": "Listen ♫",
              "audio": "Navigation 'Main Menu', 2 items. -- Heading Level 2, Main Menu. -- Current. -- Home. -- Link, about. -- Link, contact."
            }
          }
        ],
        "subs":
        [
          {
            "title": "Drop Downs",
            "paragraphs":
            [
              {
                "li": "Drop downs should be only visually hidden to be accessible for screen reader. Ideally the visuallyhidden class would then be toggled via javascript. See <a href=\"#Hiding-Elements\">hiding elements</a> and <a href=\"#Drop-Downs-2\">the example below</a> for further information."
              },
              {
                "li": "Usually a drop down is another odered or unordered list inside the list item of the first ordered or unordered list:",
                "pre": "<nav role=\"navigation\" aria-labelledby=\"exampleNav1\">\n  <h2 id=\"exampleNav1\">Some Example Navigation</h2>\n  <ul>\n    <li><a href=\"#link\">Section1</a></li>\n    <li><a href=\"#link\">Section2</a>\n      <!-- submenu start -->\n      <ul class=\"visuallyhidden\">\n        <li><a href=\"#link\">Section2-1</a></li>\n        <li><a href=\"#link\">Section2-2</a></li>\n      </ul>\n      <!-- submenu end -->\n    </li>\n    <li><a href=\"#link\">Section3</a></li>\n  </ul>\n</nav>",
                "preLang": "markup"
              }
            ]
          },
          {
            "title": "Breadcrumbs",
            "paragraphs":
            [
              {
                "li": "Use a <code>nav</code> tag with <code>role=\"navigation\"</code> and <code>aria-label=\"you are here\"</code>. Also add a visually hidden indice “current” to the last item.",
                "example":
                {
                  "pre": "<nav class=\"breadcrumb\" role=\"navigation\" aria-label=\"You are here:\">\n  <a href=\"#link\">Home</a>\n  >\n  <a href=\"#link\">About Sharks</a>\n  >\n  <span class=\"visuallyhidden\">Current:</span> Hammerhead Shark Facts.\n</nav>\n",
                  "preLang": "markup",
                  "play": "Listen ♫",
                  "audio": "Navigation 'You are here', 6 items. -- Link, Home. -- > -- Link, About Sharks. -- > -- Current. -- Hammerhead Shark Facts."
                }
              }
            ]
          }
        ]
      },
      {
        "title": "Skip Links",
        "paragraphs":
        [
          {
            "li": "Not every screen reader has advanced mechanism to jump to sections, headings, links, etc. or to skip repetitive codeblocks as Tables, Codeblocks, etc. So, this is probably one of the most important thing for a good screen reader user experience is providing links to jump immediatly to relevant sections and/or to skip repetitive content. On this page skip links were added before each code example to skip it. Moreover a visually hidden skip link was added at the begining of the page granting screen reader users the possibility to jump directly to either the table of contents, the menu or the content. PS: There is also a visually hidden easter egg somewhere, can you spot it?"
          },
          {
            "li": "Skip links are like normal links pointing to anchors (elements with IDs) on your page. You might want to hide them visually but display them on focus to improve the usability of your page for keyboard users as well:",
            "pre": "<nav role=\"navigation\" aria-labelledby=\"exampleNav1\">\n  <h2 id=\"exampleNav1\">Some Example Navigation</h2>\n  <ul>\n    <li><a href=\"#link\">Section1</a></li>\n    <li><a href=\"#link\">Section2</a>\n      <!-- submenu start -->\n      <ul class=\"visuallyhidden\">\n        <li><a href=\"#link\">Section2-1</a></li>\n        <li><a href=\"#link\">Section2-2</a></li>\n      </ul>\n      <!-- submenu end -->\n    </li>\n    <li><a href=\"#link\">Section3</a></li>\n  </ul>\n</nav>",
            "preLang": "markup"
          }
        ]
      },
      {
        "title": "Example Section",
        "paragraphs":
        [
          {
            "p": "dolor sit"
          },
          {
            "img": "only img"
          }
        ],
        "subs":
        [
          {
            "title": "test2"
          }
        ]
      }
    ]
  }
}
